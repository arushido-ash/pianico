{"version":3,"sources":["assets/mp3/C.mp3","assets/mp3/D.mp3","assets/mp3/E.mp3","assets/mp3/F.mp3","assets/mp3/G.mp3","assets/mp3/A.mp3","assets/mp3/B.mp3","assets/mp3/C2.mp3","logo.svg","Component/Home/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","state","logs","isPressed","test","num","FLOUR_FIRST_WORD","Object","assign","this","push","setState","FLOUR_SECOND_WORD","FLOUR_sann_WORD","FLOUR_yon_WORD","scale","c","Audio","C","volume","play","d","D","e","E","f","F","g","G","a","A","b","B","c2","C2","document","addEventListener","event","key","playPianoBySound","onKeyPress","className","onClick","Flour","map","log","React","Component","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uGAAAA,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,gC,2ECA3CD,EAAOC,QAAU,IAA0B,kC,qUCyK5BC,E,kDA5JX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,GACNC,WAAW,EACXC,KAAM,IALK,E,kDAQbC,GAEF,OAAOA,GACH,KAAK,EACD,IACMC,EAAmBC,OAAOC,OAAO,GAAIC,KAAKR,MAAMC,MACtDI,EAAiBI,KAFG,mCAGpBD,KAAKE,SAAS,CAAET,KAAMI,IACtB,MACJ,KAAK,EACD,IACMM,EAAoBL,OAAOC,OAAO,GAAIC,KAAKR,MAAMC,MACvDU,EAAkBF,KAFG,mCAGrBD,KAAKE,SAAS,CAAET,KAAMU,IACtB,MACJ,KAAK,EACD,IACMC,EAAkBN,OAAOC,OAAO,GAAIC,KAAKR,MAAMC,MACrDW,EAAgBH,KAFG,+CAGnBD,KAAKE,SAAS,CAAET,KAAMW,IACtB,MACJ,KAAK,EACD,IACMC,EAAiBP,OAAOC,OAAO,GAAIC,KAAKR,MAAMC,MACpDY,EAAeJ,KAFG,wCAGlBD,KAAKE,SAAS,CAAET,KAAMY,IACtB,MACJ,KAAK,EAEDL,KAAKE,SAAS,CAAET,KAAM,Q,uCAMjBa,GACb,OAAOA,GACH,IAAK,IACD,IAAMC,EAAI,IAAIC,MAAMC,KACpBF,EAAEG,OAAS,GACXH,EAAEI,OACF,MACJ,IAAK,IACD,IAAMC,EAAI,IAAIJ,MAAMK,KACpBD,EAAEF,OAAS,GACXE,EAAED,OACF,MACJ,IAAK,IACD,IAAMG,EAAI,IAAIN,MAAMO,KACpBD,EAAEJ,OAAS,GACXI,EAAEH,OACF,MACJ,IAAK,IACD,IAAMK,EAAI,IAAIR,MAAMS,KACpBD,EAAEN,OAAS,GACXM,EAAEL,OACF,MACJ,IAAK,IACD,IAAMO,EAAI,IAAIV,MAAMW,KACpBD,EAAER,OAAS,GACXQ,EAAEP,OACF,MACJ,IAAK,IACD,IAAMS,EAAI,IAAIZ,MAAMa,KACpBD,EAAEV,OAAS,GACXU,EAAET,OACF,MACJ,IAAK,IACD,IAAMW,EAAI,IAAId,MAAMe,KACpBD,EAAEZ,OAAS,GACXY,EAAEX,OACF,MACJ,IAAK,KACD,IAAMa,EAAK,IAAIhB,MAAMiB,KACrBD,EAAGd,OAAS,GACZc,EAAGb,U,mCAMD,IAAD,OACTe,SAASC,iBAAiB,WAAW,SAACC,GAElC,OADgBA,EAAMC,KAElB,IAAK,IACD,EAAKC,iBAAiB,KACtB,MACJ,IAAK,IACD,EAAKA,iBAAiB,KACtB,MACJ,IAAK,IACD,EAAKA,iBAAiB,KACtB,MACJ,IAAK,IACD,EAAKA,iBAAiB,KACtB,MACJ,IAAK,IACD,EAAKA,iBAAiB,KACtB,MACJ,IAAK,IACD,EAAKA,iBAAiB,KACtB,MACJ,IAAK,IACD,EAAKA,iBAAiB,KACtB,MACJ,IAAK,IACD,EAAKA,iBAAiB,Y,+BAO5B,IAAD,OAEL,OADA9B,KAAK+B,aAED,6BACI,yBAAKC,UAAU,aACX,4BAAQA,UAAU,YAAYC,QAAS,kBAAM,EAAKH,iBAAiB,QACnE,4BAAQE,UAAU,6BAClB,4BAAQA,UAAU,YAAYC,QAAS,kBAAM,EAAKH,iBAAiB,QACnE,4BAAQE,UAAU,6BAClB,4BAAQA,UAAU,YAAYC,QAAS,kBAAM,EAAKH,iBAAiB,QACnE,4BAAQE,UAAU,YAAYC,QAAS,kBAAM,EAAKH,iBAAiB,QACnE,4BAAQE,UAAU,6BAClB,4BAAQA,UAAU,YAAYC,QAAS,kBAAM,EAAKH,iBAAiB,QACnE,4BAAQE,UAAU,6BAClB,4BAAQA,UAAU,YAAYC,QAAS,kBAAM,EAAKH,iBAAiB,QACnE,4BAAQE,UAAU,6BAClB,4BAAQA,UAAU,YAAYC,QAAS,kBAAM,EAAKH,iBAAiB,QACnE,4BAAQE,UAAU,YAAYC,QAAS,kBAAM,EAAKH,iBAAiB,UAEvE,4BAAQE,UAAU,QAAQC,QAAS,kBAAM,EAAKC,MAAM,KAApD,sBACA,4BAAQF,UAAU,QAAQC,QAAS,kBAAM,EAAKC,MAAM,KAApD,sBACA,4BAAQF,UAAU,QAAQC,QAAS,kBAAM,EAAKC,MAAM,KAApD,sBACA,4BAAQF,UAAU,QAAQC,QAAS,kBAAM,EAAKC,MAAM,KAApD,sBACA,4BAAQF,UAAU,SAASC,QAAS,kBAAM,EAAKC,MAAM,KAArD,sBAEClC,KAAKR,MAAMC,KAAK0C,KAAI,SAACC,GAClB,OAAQ,6BAAMA,W,GArJfC,IAAMC,WCGVC,MATf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpD,MCGnBqD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFxB,SAASyB,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2e7ef1b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/C.fd615fed.mp3\";","module.exports = __webpack_public_path__ + \"static/media/D.9b0463d3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/E.34491f2f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/F.1346d7ae.mp3\";","module.exports = __webpack_public_path__ + \"static/media/G.9fd13279.mp3\";","module.exports = __webpack_public_path__ + \"static/media/A.c7ed0594.mp3\";","module.exports = __webpack_public_path__ + \"static/media/B.1253ab51.mp3\";","module.exports = __webpack_public_path__ + \"static/media/C2.63a4c3a0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport \"./style.css\";\r\nimport C from \"../../assets/mp3/C.mp3\"\r\nimport D from \"../../assets/mp3/D.mp3\"\r\nimport E from \"../../assets/mp3/E.mp3\"\r\nimport F from \"../../assets/mp3/F.mp3\"\r\nimport G from \"../../assets/mp3/G.mp3\"\r\nimport A from \"../../assets/mp3/A.mp3\"\r\nimport B from \"../../assets/mp3/B.mp3\"\r\nimport C2 from \"../../assets/mp3/C2.mp3\"\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            logs: [],\r\n            isPressed: false,\r\n            test: '',\r\n        }\r\n    }\r\n    Flour(num) {\r\n        // alert(\"収穫してへん\")\r\n        switch(num) {\r\n            case 1:\r\n                const FLOUR_FIRST = \"小麦粉1です\"\r\n                const FLOUR_FIRST_WORD = Object.assign([], this.state.logs);\r\n                FLOUR_FIRST_WORD.push(FLOUR_FIRST);\r\n                this.setState({ logs: FLOUR_FIRST_WORD });\r\n                break;\r\n            case 2:\r\n                const FLOUR_SECOND = \"小麦粉2です\"\r\n                const FLOUR_SECOND_WORD = Object.assign([], this.state.logs);\r\n                FLOUR_SECOND_WORD.push(FLOUR_SECOND);\r\n                this.setState({ logs: FLOUR_SECOND_WORD });\r\n                break;\r\n            case 3:\r\n                const FLOUR_sann = \"小麦粉3ですか？\"\r\n                const FLOUR_sann_WORD = Object.assign([], this.state.logs);\r\n                FLOUR_sann_WORD.push(FLOUR_sann);\r\n                this.setState({ logs: FLOUR_sann_WORD });\r\n                break;\r\n            case 4:\r\n                const FLOUR_yon = \"違いますか？\"\r\n                const FLOUR_yon_WORD = Object.assign([], this.state.logs);\r\n                FLOUR_yon_WORD.push(FLOUR_yon)\r\n                this.setState({ logs: FLOUR_yon_WORD})\r\n                break;\r\n            case 5:\r\n                // alert(\"ちがうよ？\")\r\n                this.setState({ logs: [] })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    playPianoBySound(scale) {\r\n        switch(scale) {\r\n            case 'c':\r\n                const c = new Audio(C)\r\n                c.volume = 0.10;\r\n                c.play();\r\n                break;\r\n            case 'd':\r\n                const d = new Audio(D)\r\n                d.volume = 0.10;\r\n                d.play();\r\n                break;\r\n            case 'e':\r\n                const e = new Audio(E)\r\n                e.volume = 0.10;\r\n                e.play();\r\n                break;\r\n            case 'f':\r\n                const f = new Audio(F)\r\n                f.volume = 0.10;\r\n                f.play();\r\n                break;\r\n            case 'g':\r\n                const g = new Audio(G)\r\n                g.volume = 0.10;\r\n                g.play();\r\n                break;\r\n            case 'a':\r\n                const a = new Audio(A)\r\n                a.volume = 0.10;\r\n                a.play();\r\n                break;\r\n            case 'b':\r\n                const b = new Audio(B)\r\n                b.volume = 0.10;\r\n                b.play();\r\n                break;\r\n            case 'c2':\r\n                const c2 = new Audio(C2)\r\n                c2.volume = 0.10;\r\n                c2.play();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    onKeyPress() {\r\n        document.addEventListener('keydown', (event) => {\r\n            const keyName = event.key;\r\n            switch(keyName) {\r\n                case 'c':\r\n                    this.playPianoBySound('c');\r\n                    break;\r\n                case 'v':\r\n                    this.playPianoBySound('d');\r\n                    break;\r\n                case 'b':\r\n                    this.playPianoBySound('e');\r\n                    break;\r\n                case 'n':\r\n                    this.playPianoBySound('f');\r\n                    break;\r\n                case 'm':\r\n                    this.playPianoBySound('g');\r\n                    break;\r\n                case ',':\r\n                    this.playPianoBySound('a');\r\n                    break;   \r\n                case '.':\r\n                    this.playPianoBySound('b');\r\n                    break;\r\n                case '/':\r\n                    this.playPianoBySound('c2');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        this.onKeyPress();\r\n        return (\r\n            <div>\r\n                <div className=\"pianoWrap\">\r\n                    <button className='pianoTile' onClick={() => this.playPianoBySound('c')}></button>\r\n                    <button className=\"pianoTile sharp sharp_cs\"></button>\r\n                    <button className=\"pianoTile\" onClick={() => this.playPianoBySound('d')}></button>\r\n                    <button className=\"pianoTile sharp sharp_ds\"></button>\r\n                    <button className=\"pianoTile\" onClick={() => this.playPianoBySound('e')}></button>\r\n                    <button className=\"pianoTile\" onClick={() => this.playPianoBySound('f')}></button>\r\n                    <button className=\"pianoTile sharp sharp_fs\"></button>\r\n                    <button className=\"pianoTile\" onClick={() => this.playPianoBySound('g')}></button>\r\n                    <button className=\"pianoTile sharp sharp_gs\"></button>\r\n                    <button className=\"pianoTile\" onClick={() => this.playPianoBySound('a')}></button>\r\n                    <button className=\"pianoTile sharp sharp_as\"></button>\r\n                    <button className=\"pianoTile\" onClick={() => this.playPianoBySound('b')}></button>\r\n                    <button className=\"pianoTile\" onClick={() => this.playPianoBySound('c2')}></button>\r\n                </div>\r\n                <button className=\"flour\" onClick={() => this.Flour(1)}>小麦粉</button>\r\n                <button className=\"flour\" onClick={() => this.Flour(2)}>小麦粉</button>\r\n                <button className=\"flour\" onClick={() => this.Flour(3)}>小麦粉</button>\r\n                <button className=\"flour\" onClick={() => this.Flour(4)}>小麦粉</button>\r\n                <button className=\"potato\" onClick={() => this.Flour(5)}>片栗粉</button>\r\n\r\n                {this.state.logs.map((log) => {\r\n                    return (<div>{log}</div>)\r\n                })}\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Home;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Home from './Component/Home'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route exact path=\"/\" component={Home} />\n      {/* <Route path=\"/about\" component={About} /> */}\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}